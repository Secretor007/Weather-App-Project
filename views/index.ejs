<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="styles.css" />
    <title>Weather App</title>
  </head>
  <body>
    <div class="card">
      <div class="search">
        <input type="text" placeholder="Enter city name" spellcheck="false" />
        <button><img src="images/search.png" alt="search-icon" /></button>
      </div>
      <div class="error">
        <p>Invalid City Name!</p>
        <p class="rate-limit-error">
          Too Many Requests. Please try again later.
        </p>
      </div>
      <div class="weather">
        <img src="/images/rain.png" alt="rain-img" class="weather-icon" />
        <h1 class="temp">22°c</h1>
        <h2 class="city">Mumbai</h2>
        <div class="details">
          <div class="col">
            <img src="/images/humidity.png" alt="humidity-img" />
            <div>
              <p class="humidity">80%</p>
              <p>Humidity</p>
            </div>
          </div>
          <div class="col">
            <img src="/images/wind.png" alt="wind" />
            <div>
              <p class="wind">15 m/s</p>
              <p>Wind Speed</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
      const api_key = "<%= apiKey %>";
      const api_url = "<%= apiUrl %>";
      const searchBox = document.querySelector(".search input");
      const searchBtn = document.querySelector(".search button");
      const weatherIcon = document.querySelector(".weather-icon");

      let cache = {};

      function debounce(func, delay) {
        let debounceTimer;
        return function () {
          const context = this;
          const args = arguments;
          clearTimeout(debounceTimer);
          debounceTimer = setTimeout(() => func.apply(context, args), delay);
        };
      }

      async function checkWeather(city) {
        if (cache[city]) {
          displayWeather(cache[city]);
          return;
        }

        try {
          const response = await fetch(api_url + city + `&key=${api_key}`);

          if (response.status === 400) {
            document.querySelector(".error").style.display = "block";
            document.querySelector(".weather").style.display = "none";
          } else if (response.status === 429) {
            document.querySelector(".rate-limit-error").style.display = "block";
            document.querySelector(".weather").style.display = "none";
          } else {
            const data = await response.json();
            cache[city] = data;
            displayWeather(data);
          }
        } catch (error) {
          console.error("Error fetching weather data:", error);
        }
      }

      function displayWeather(data) {
        document.querySelector(".city").innerHTML = data.data[0].city_name;
        document.querySelector(".temp").innerHTML =
          Math.round(data.data[0].app_temp) + "°c";
        document.querySelector(".humidity").innerHTML = data.data[0].rh + "%";
        document.querySelector(".wind").innerHTML =
          data.data[0].wind_spd + " m/s";

        const weatherCode = data.data[0].weather.code;
        if (weatherCode >= 500 && weatherCode < 600) {
          weatherIcon.src = "images/rain.png";
        } else if (weatherCode >= 600 && weatherCode < 700) {
          weatherIcon.src = "images/snow.png";
        } else if (weatherCode >= 700 && weatherCode < 800) {
          weatherIcon.src = "images/mist.png";
        } else if (weatherCode >= 801 && weatherCode <= 804) {
          weatherIcon.src = "images/clouds.png";
        } else if (weatherCode === 800) {
          weatherIcon.src = "images/clear.png";
        }

        document.querySelector(".weather").style.display = "block";
        document.querySelector(".error").style.display = "none";
        document.querySelector(".rate-limit-error").style.display = "none";
      }

      searchBtn.addEventListener(
        "click",
        debounce(() => {
          checkWeather(searchBox.value);
        }, 1000)
      );
    </script>
  </body>
</html>
